CREATE TABLE BG_PAYMENT_CONSENT (
  PAYMENT_ID                   VARCHAR(255)  NOT NULL,
  REQUEST_BODY                 NVARCHAR(MAX) NOT NULL CHECK ( ISJSON(REQUEST_BODY) > 0 ),
  PAYMENT_TYPE                 VARCHAR(255)  NOT NULL,
  PAYMENT_PRODUCT              VARCHAR(255)  NOT NULL,
  REQUEST_INITIATION_TIMESTAMP DATETIME      NOT NULL DEFAULT getdate(),
  TRANSACTION_STATUS           VARCHAR(64)   NOT NULL DEFAULT 0,
  TPP_UNIQUE_ID                VARCHAR(255)  NOT NULL,
  X_REQUEST_ID                 VARCHAR(255)   NOT NULL,
  PSU_ID                       VARCHAR(255),
  PSU_ID_TYPE                  VARCHAR(255),
  PSU_CORPORATE_ID             VARCHAR(255),
  PSU_CORPORATE_ID_TYPE        VARCHAR(255),
  API_VERSION VARCHAR(45) NOT NULL,
  PRIMARY KEY (PAYMENT_ID)
);

CREATE TABLE BG_PAYMENT_CONSENT_REVOCATION (
  REVOKED_BY           VARCHAR(255)  NOT NULL,
  PAYMENT_ID           VARCHAR(255)  NOT NULL,
  REASON               VARCHAR(1000) NOT NULL,
  REVOCATION_TIMESTAMP DATETIME      NOT NULL DEFAULT getdate(),
  PRIMARY KEY (REVOKED_BY, PAYMENT_ID),
  CONSTRAINT FK_PAYMENT_ID_BG_PAYMENT_CONSENT_REVOCATION FOREIGN KEY (PAYMENT_ID) REFERENCES BG_PAYMENT_CONSENT (PAYMENT_ID)
    ON DELETE CASCADE
);

CREATE TABLE BG_ACCOUNT_INITIALIZATION (
  CONSENT_ID VARCHAR(255)  NOT NULL,
  X_REQUEST_ID VARCHAR(255) NOT NULL,
  PSU_ID VARCHAR(255),
  PSU_ID_TYPE VARCHAR(64),
  PSU_CORPORATE_ID VARCHAR(255),
  PSU_CORPORATE_ID_TYPE VARCHAR(64),
  CONSENT_STATUS VARCHAR(64) NOT NULL,
  CONSENT_STATUS_UPDATE_DATETIME DATETIME NOT NULL DEFAULT getdate(),
  APP_ID INT NOT NULL,
  TPP_UNIQUE_ID VARCHAR(255) NOT NULL,
  FREQUENCY_PER_DAY INT NOT NULL,
  API_VERSION VARCHAR(45) NOT NULL,
  PRIMARY KEY (CONSENT_ID)
);

CREATE TABLE BG_ACCOUNT_BINDING (
	CONSENT_ID VARCHAR(255)  NOT NULL,
	ACCOUNT_CONSENT NVARCHAR(MAX) NOT NULL,
	RECURRING_INDICATOR AS CAST(JSON_VALUE(ACCOUNT_CONSENT, '$.recurringIndicator') AS bit),
	COMBINED_SERVICE_INDICATOR AS CAST(JSON_VALUE(ACCOUNT_CONSENT, '$.combinedServiceIndicator') AS bit),
  ACCOUNT_PERMISSIONS VARCHAR(64),
	PRIMARY KEY (CONSENT_ID),
	CONSTRAINT FK_CONSENT_ID_BG_ACCOUNT_BINDING FOREIGN KEY (CONSENT_ID) REFERENCES BG_ACCOUNT_INITIALIZATION (CONSENT_ID)
  	 ON DELETE CASCADE
);

CREATE TABLE BG_ACCOUNT_CONSENT_STATUS (
  OLD_STATUS VARCHAR(64) NOT NULL,
  NEW_STATUS VARCHAR(64) NOT NULL,
  ACTION_BY VARCHAR(64) NOT NULL,
  CONSENT_ID VARCHAR(255)  NOT NULL,
  REASON VARCHAR(1023)  NOT NULL,
  ACTION_DATETIME DATETIME NOT NULL DEFAULT getdate(),
  CONSTRAINT FK_CONSENT_ID_BG_ACCOUNT_CONSENT_STATUS FOREIGN KEY (CONSENT_ID) REFERENCES BG_ACCOUNT_INITIALIZATION (CONSENT_ID)
    ON DELETE CASCADE
);

CREATE TABLE BG_ACCOUNT_CONSENT_FREQUENCY (
   USER_ID VARCHAR(255),
   TPP_UNIQUE_ID VARCHAR(255) NOT NULL,
   CONSENT_ID VARCHAR(255)  NOT NULL,
   FREQUENCY_PER_DAY INT NOT NULL,
   ID INT IDENTITY(1,1),
   PRIMARY KEY (ID)
);

-- ACCOUNT ACCESS BINDING
-- FOR BANK OFFERED CONSENT & QUERYING
CREATE TABLE BG_ACCOUNT_ACCESS_BINDING (
  CONSENT_ID VARCHAR(255)  NOT NULL,
  ACCOUNTS NVARCHAR(MAX),
 	BALANCES NVARCHAR(MAX),
 	TRANSACTIONS NVARCHAR(MAX),
  PRIMARY KEY (CONSENT_ID),
  CONSTRAINT FK_CONSENT_ID_BG_ACCOUNT_ACCESS_BINDING FOREIGN KEY (CONSENT_ID) REFERENCES BG_ACCOUNT_INITIALIZATION (CONSENT_ID)
    ON DELETE CASCADE
);

-- AUTHORISATION SUB RESOURCE TABLE
-- BINDS CONSENT TO AUTHORISATION RESOURCE
CREATE TABLE BG_AUTH_RESOURCE (
  -- PRIMARY KEY
  X_REQUEST_ID        VARCHAR(255)  NOT NULL,
  AUTH_TYPE           VARCHAR(255)  NOT NULL,
  CONSENT_ID          VARCHAR(255)  NOT NULL,
  CONSENT_TYPE        VARCHAR(255)  NOT NULL,
  AUTH_ID             VARCHAR(255)  NOT NULL,
  -- USER BINDING
  USER_ID             VARCHAR(255),
  AUTH_STATUS         VARCHAR(255)  NOT NULL,
  -- METADATA
  UPDATED_TIMESTAMP   DATETIME      NOT NULL DEFAULT getdate(),
  API_VERSION         VARCHAR(255)  NOT NULL,
  -- COMPOSITE CONSTRAINT
  PRIMARY KEY (X_REQUEST_ID, AUTH_TYPE, CONSENT_ID, CONSENT_TYPE, AUTH_ID)
)

CREATE TABLE  OB_CONSENT_METADATA (
  CONSENT_ID VARCHAR(255) NOT NULL,
  CONSENT_TYPE VARCHAR(255) NOT NULL,
  METADATA_KEY VARCHAR(255) NOT NULL,
  METADATA_VALUE VARCHAR(255) NOT NULL,
  PRIMARY KEY(CONSENT_ID, CONSENT_TYPE, METADATA_KEY)
);

