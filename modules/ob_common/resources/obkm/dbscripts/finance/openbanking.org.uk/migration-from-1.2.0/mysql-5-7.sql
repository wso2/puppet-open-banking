ALTER TABLE UK_ACCOUNT_CONSENT_REVOCATION_HISTORY RENAME UK_ACCOUNT_CONSENT_REV_HISTORY;
ALTER TABLE UK_ACCOUNT_CONSENT_REV_HISTORY MODIFY REVOCATION_REASON VARCHAR(2048);

CREATE TABLE IF NOT EXISTS UK_COF_INITIATION (
  ID        VARCHAR(255)  NOT NULL,
  REQUEST   JSON NOT NULL,
  CREATED_TIMESTAMP DATETIME      NOT NULL DEFAULT CURRENT_TIMESTAMP,
  STATUS    VARCHAR(64)   NOT NULL DEFAULT 0,
  CLIENT_ID VARCHAR(255)  NOT NULL,
  STATUS_UPDATED_TIMESTAMP DATETIME      NOT NULL DEFAULT CURRENT_TIMESTAMP,
  SPEC_VERSION VARCHAR(64)   NOT NULL,
  PRIMARY KEY (ID)
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS UK_TRANSACTION_FILE (
  CONSENT_ID        VARCHAR(255) NOT NULL,
  CLIENT_ID         VARCHAR(255) NOT NULL,
  PAYMENT_FILE      MEDIUMBLOB   NOT NULL,
  IDEMPOTENT_KEY    VARCHAR(64)  NOT NULL,
  TIMESTAMP         TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (CONSENT_ID),
  CONSTRAINT FK_CONSENT_ID_UK_TRANSACTION_FILE FOREIGN KEY (CONSENT_ID) REFERENCES UK_TRANSACTION_INITIATION (ID)
      ON DELETE CASCADE
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS UK_COF_CONSENT_BINDING (
  USER_ID           VARCHAR(255) NOT NULL,
  CONSENT_ID        VARCHAR(255) NOT NULL,
  ACCOUNT_ID        VARCHAR(255) NOT NULL,
  TIMESTAMP         DATETIME     NOT NULL DEFAULT CURRENT_TIMESTAMP,
  COLLECTION_METHOD VARCHAR(64),
  PRIMARY KEY (USER_ID, CONSENT_ID, ACCOUNT_ID),
  CONSTRAINT FK_CONSENT_ID_UK_COF_CONSENT_BINDING FOREIGN KEY (CONSENT_ID) REFERENCES UK_COF_INITIATION (ID)
    ON DELETE CASCADE
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS UK_COF_CONSENT_REV_HISTORY (
  CONSENT_ID VARCHAR(255) NOT NULL,
  REVOCATION_USER VARCHAR(255) NOT NULL,
  REVOCATION_REASON VARCHAR(2048) NOT NULL,
  PRIMARY KEY (CONSENT_ID),
  CONSTRAINT FK_CONSENT_ID_UK_FUNDS_CONFIRMATION_CONSENT_REVOCATION_HISTORY FOREIGN KEY (CONSENT_ID) REFERENCES UK_COF_INITIATION (ID)
    ON DELETE CASCADE
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS OB_MULTI_AUTHORIZATION (
  ID INTEGER AUTO_INCREMENT,
  CONSENT_ID VARCHAR(255) NOT NULL,
  CLIENT_ID  VARCHAR(255) NOT NULL,
  SELECTED_ACCOUNT  VARCHAR(255) NOT NULL,
  AUTHORIZATION_EXPIRY_DATE TIMESTAMP  NOT NULL DEFAULT CURRENT_TIMESTAMP,
  STATUS VARCHAR(255) NOT NULL,
  NUMBER_OF_TOTAL_AUTHORIZATIONS INTEGER DEFAULT 0,
  CREATED_TIMESTAMP  TIMESTAMP  NOT NULL DEFAULT CURRENT_TIMESTAMP,
  STATUS_UPDATED_TIMESTAMP  TIMESTAMP  NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID)
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS OB_MULTI_AUTHORIZATION_USER (
  ID  INTEGER DEFAULT 0,
  USER_ID VARCHAR(255) NOT NULL,
  STATUS  VARCHAR(255) NOT NULL,
  CREATED_TIMESTAMP TIMESTAMP  NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID,USER_ID),
  CONSTRAINT FK_ID_OB_MULTI_AUTHORIZATION_USER FOREIGN KEY (ID) REFERENCES OB_MULTI_AUTHORIZATION (ID)
    ON DELETE CASCADE
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS UK_CONSENT_REV (
  USER_ID           VARCHAR(255) NOT NULL,
  CONSENT_ID        VARCHAR(255) NOT NULL,
  ACCOUNT_ID        VARCHAR(255) NOT NULL,
  TIMESTAMP         TIMESTAMP     NOT NULL DEFAULT CURRENT_TIMESTAMP,
  COLLECTION_METHOD VARCHAR(64),
  PRIMARY KEY (USER_ID, CONSENT_ID,ACCOUNT_ID)
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS OB_CONSENT_METADATA (
  CONSENT_ID VARCHAR(255) NOT NULL,
  CONSENT_TYPE VARCHAR(255) NOT NULL,
  METADATA_KEY VARCHAR(255) NOT NULL,
  METADATA_VALUE VARCHAR(255) NOT NULL,
  PRIMARY KEY(CONSENT_ID, CONSENT_TYPE, METADATA_KEY),
  CONSTRAINT FK_CONSENT_ID_UK_INITIATION FOREIGN KEY (CONSENT_ID) REFERENCES UK_TRANSACTION_INITIATION (ID)
  ON DELETE CASCADE
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS OB_DCR_DETAILS (
  ID VARCHAR(255) NOT NULL,
  TPP_NAME VARCHAR(255) NOT NULL,
  REQUEST_HEADER JSON NOT NULL,
  REQUEST JSON NOT NULL,
  CLIENT_ID VARCHAR(255) NOT NULL,
  SOFTWARE_ENV VARCHAR(255) NOT NULL,
  SPEC_VERSION VARCHAR(64) NOT NULL,
  CREATED_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  STATUS VARCHAR(64) NOT NULL,
  STATUS_UPDATED_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`)
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS UK_NOTIFICATION (
  ID int(11) NOT NULL AUTO_INCREMENT,
  RESOURCE_ID varchar(50) NOT NULL,
  RESOURCE_TYPE varchar(50) NOT NULL,
  RESOURCE_LINK varchar(200) NOT NULL,
  VERSION varchar(10) NOT NULL,
  CLIENT_ID varchar(50) NOT NULL,
  STATUS varchar(10) NOT NULL,
  TIMESTAMP timestamp NULL DEFAULT NULL,
  LAST_RETRY_TIME timestamp NULL DEFAULT NULL,
  NEXT_RETRY_TIME timestamp NULL DEFAULT NULL,
  TRY_COUNT int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (ID)
 )ENGINE INNODB;

delimiter '//'

CREATE PROCEDURE add_columns_tra_init() BEGIN
IF NOT EXISTS(
SELECT * FROM information_schema.COLUMNS
WHERE COLUMN_NAME='STATUS_UPDATED_TIMESTAMP' AND TABLE_SCHEMA='openbank_consentdb' AND TABLE_NAME='UK_TRANSACTION_INITIATION'
)
THEN
    ALTER TABLE UK_TRANSACTION_INITIATION ADD STATUS_UPDATED_TIMESTAMP DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP;
    ALTER TABLE UK_TRANSACTION_INITIATION ADD SPEC_VERSION VARCHAR(64) NOT NULL DEFAULT 'UK200';
END IF;
END;
//

delimiter ';'

CALL add_columns_tra_init();

DROP PROCEDURE add_columns_tra_init;


delimiter '//'

CREATE PROCEDURE add_columns_acc_init() BEGIN
IF NOT EXISTS(
SELECT * FROM information_schema.COLUMNS
WHERE COLUMN_NAME='SPEC_VERSION' AND TABLE_SCHEMA='openbank_consentdb' AND TABLE_NAME='UK_ACCOUNT_INITIATION'
)
THEN
    ALTER TABLE UK_ACCOUNT_INITIATION ADD SPEC_VERSION VARCHAR(64) NOT NULL DEFAULT 'UK200';
END IF;
END;
//

delimiter ';'

CALL add_columns_acc_init();

DROP PROCEDURE add_columns_acc_init;

delimiter '//'

CREATE PROCEDURE update_notifications() BEGIN
IF NOT EXISTS(
SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='openbank_consentdb' AND TABLE_NAME='UK_NOTIFICATION_CALLBACK'
)
THEN
  CREATE TABLE IF NOT EXISTS UK_NOTIFICATION_CALLBACK (
  ID int(11) NOT NULL AUTO_INCREMENT,
  CLIENT_ID varchar(50) NOT NULL,
  REQUEST varchar(1000) NOT NULL,
  TIMESTAMP timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  SPEC_VERSION varchar(10) NOT NULL,
  PRIMARY KEY (ID)
)ENGINE INNODB;
ELSE
   IF NOT EXISTS(
    SELECT * FROM INFORMATION_SCHEMA.COLUMNS
    WHERE COLUMN_NAME='SPEC_VERSION' AND TABLE_NAME='UK_NOTIFICATION_CALLBACK'
    AND TABLE_SCHEMA='openbank_consentdb'
    )
   THEN
    ALTER TABLE UK_NOTIFICATION_CALLBACK ADD SPEC_VERSION VARCHAR(64) NOT NULL DEFAULT 'UK300' AFTER TIMESTAMP;
    ALTER TABLE UK_NOTIFICATION_CALLBACK ADD REQUEST varchar(1000) NOT NULL AFTER CLIENT_ID;
    UPDATE UK_NOTIFICATION_CALLBACK AS a, (SELECT ID, JSON_OBJECT('CallbackUrlId',ID, 'Url',URL, 'Version',VERSION) REQUEST FROM UK_NOTIFICATION_CALLBACK) b SET a.REQUEST = b.REQUEST WHERE a.ID = b.ID;
   END IF;
END IF;
END;
//

delimiter ';'

CALL update_notifications();

DROP PROCEDURE update_notifications;

delimiter '//'

CREATE PROCEDURE add_columns_cof_init() BEGIN
IF NOT EXISTS(
SELECT * FROM information_schema.COLUMNS
WHERE COLUMN_NAME='SPEC_VERSION' AND TABLE_SCHEMA='openbank_consentdb' AND TABLE_NAME='UK_COF_INITIATION'
)
THEN
    ALTER TABLE UK_COF_INITIATION ADD SPEC_VERSION VARCHAR(64) NOT NULL DEFAULT 'UK300';
END IF;
END;
//

delimiter ';'

CALL add_columns_cof_init();

DROP PROCEDURE add_columns_cof_init;


