CREATE TABLE UK_TRANSACTION_INITIATION (
  ID        VARCHAR(255)  NOT NULL,
  REQUEST   NVARCHAR(MAX) NOT NULL CHECK ( ISJSON(REQUEST) > 0 ),
  TIMESTAMP DATETIME      NOT NULL DEFAULT getdate(),
  STATUS    VARCHAR(64)   NOT NULL DEFAULT 0,
  CLIENT_ID VARCHAR(255)  NOT NULL,
  IDEMPOTENT_KEY VARCHAR(64) NOT NULL ,
  STATUS_UPDATED_TIMESTAMP DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  SPEC_VERSION VARCHAR(64)   NOT NULL,
  PRIMARY KEY (ID),
);

CREATE TABLE UK_ACCOUNT_INITIATION (
  ID        VARCHAR(255)  NOT NULL,
  REQUEST   NVARCHAR(MAX) NOT NULL CHECK ( ISJSON(REQUEST) > 0 ),
  CREATED_TIMESTAMP DATETIME      NOT NULL DEFAULT getdate(),
  STATUS    VARCHAR(64)   NOT NULL DEFAULT 0,
  CLIENT_ID VARCHAR(255)  NOT NULL,
  STATUS_UPDATED_TIMESTAMP DATETIME      NOT NULL DEFAULT getdate(),
  SPEC_VERSION VARCHAR(64) NOT NULL,
  PRIMARY KEY (ID),
);

CREATE TABLE UK_COF_INITIATION (
  ID        VARCHAR(255)  NOT NULL,
  REQUEST   NVARCHAR(MAX) NOT NULL CHECK ( ISJSON(REQUEST) > 0 ),
  CREATED_TIMESTAMP DATETIME      NOT NULL DEFAULT getdate(),
  STATUS    VARCHAR(64)   NOT NULL DEFAULT 0,
  CLIENT_ID VARCHAR(255)  NOT NULL,
  STATUS_UPDATED_TIMESTAMP DATETIME      NOT NULL DEFAULT getdate(),
  SPEC_VERSION VARCHAR(64)   NOT NULL,
  PRIMARY KEY (ID),
);

CREATE TABLE UK_TRANSACTION_CONSENT_BINDING (
  USER_ID           VARCHAR(255) NOT NULL,
  CONSENT_ID        VARCHAR(255) NOT NULL,
  DEBTOR_ACCOUNT    VARCHAR(255) NOT NULL,
  TIMESTAMP         DATETIME     NOT NULL DEFAULT getdate(),
  COLLECTION_METHOD VARCHAR(64),
  PRIMARY KEY (USER_ID, CONSENT_ID),
  CONSTRAINT FK_CONSENT_ID_UK_TRANSACTION_CONSENT_BINDING FOREIGN KEY (CONSENT_ID) REFERENCES UK_TRANSACTION_INITIATION (ID)
    ON DELETE CASCADE
);

CREATE TABLE UK_TRANSACTION_FILE (
  CONSENT_ID        VARCHAR(255) NOT NULL,
  CLIENT_ID         VARCHAR(255) NOT NULL,
  PAYMENT_FILE      VARCHAR(MAX)   NOT NULL,
  IDEMPOTENT_KEY    VARCHAR(64)  NOT NULL,
  TIMESTAMP         DATETIME     NOT NULL DEFAULT getdate(),
  PRIMARY KEY (CONSENT_ID),
  CONSTRAINT FK_CONSENT_ID_UK_TRANSACTION_FILE FOREIGN KEY (CONSENT_ID) REFERENCES UK_TRANSACTION_INITIATION (ID)
      ON DELETE CASCADE
);

CREATE TABLE UK_ACCOUNT_CONSENT_BINDING (
  USER_ID           VARCHAR(255) NOT NULL,
  CONSENT_ID        VARCHAR(255) NOT NULL,
  ACCOUNT_ID        VARCHAR(255) NOT NULL,
  TIMESTAMP         DATETIME     NOT NULL DEFAULT getdate(),
  COLLECTION_METHOD VARCHAR(64),
  PRIMARY KEY (USER_ID, CONSENT_ID,ACCOUNT_ID),
  CONSTRAINT FK_CONSENT_ID_UK_ACCOUNT_CONSENT_BINDING FOREIGN KEY (CONSENT_ID) REFERENCES UK_ACCOUNT_INITIATION (ID)
    ON DELETE CASCADE
);

CREATE TABLE UK_COF_CONSENT_BINDING (
  USER_ID           VARCHAR(255) NOT NULL,
  CONSENT_ID        VARCHAR(255) NOT NULL,
  ACCOUNT_ID        VARCHAR(255) NOT NULL,
  TIMESTAMP         DATETIME     NOT NULL DEFAULT getdate(),
  COLLECTION_METHOD VARCHAR(64),
  PRIMARY KEY (USER_ID, CONSENT_ID,ACCOUNT_ID),
  CONSTRAINT FK_CONSENT_ID_UK_COF_CONSENT_BINDING FOREIGN KEY (CONSENT_ID) REFERENCES UK_COF_INITIATION (ID)
    ON DELETE CASCADE
);


CREATE TABLE UK_ACCOUNT_CONSENT_REV_HISTORY (
  CONSENT_ID VARCHAR(255) NOT NULL,
  REVOCATION_USER VARCHAR(255) NOT NULL,
  REVOCATION_REASON VARCHAR(2048) NOT NULL,
  PRIMARY KEY (CONSENT_ID),
  CONSTRAINT FK_CONSENT_ID_UK_ACCOUNT_CONSENT_REVOCATION_HISTORY FOREIGN KEY (CONSENT_ID) REFERENCES UK_ACCOUNT_INITIATION (ID)
    ON DELETE CASCADE
);

CREATE TABLE UK_COF_CONSENT_REV_HISTORY (
  CONSENT_ID VARCHAR(255) NOT NULL,
  REVOCATION_USER VARCHAR(255) NOT NULL,
  REVOCATION_REASON VARCHAR(2048) NOT NULL,
  PRIMARY KEY (CONSENT_ID),
  CONSTRAINT FK_CONSENT_ID_UK_FUNDS_CONFIRMATION_CONSENT_REVOCATION_HISTORY FOREIGN KEY (CONSENT_ID) REFERENCES UK_COF_INITIATION (ID)
    ON DELETE CASCADE
);

CREATE TABLE OB_MULTI_AUTHORIZATION (
  ID        INTEGER IDENTITY(1,1) NOT NULL,
  CONSENT_ID        VARCHAR(255)  NOT NULL,
  CLIENT_ID         VARCHAR(255)  NOT NULL,
  SELECTED_ACCOUNT  VARCHAR(255)  NOT NULL,
  STATUS        VARCHAR(255)  NOT NULL,
  NUMBER_OF_TOTAL_AUTHORIZATIONS INTEGER DEFAULT 0,
  AUTHORIZATION_EXPIRY_DATE DATETIME NOT NULL,
  CREATED_TIMESTAMP DATETIME      NOT NULL DEFAULT getdate(),
  STATUS_UPDATED_TIMESTAMP DATETIME      NOT NULL DEFAULT getdate(),
  PRIMARY KEY (ID)
);

CREATE TABLE OB_MULTI_AUTHORIZATION_USER (
  ID        INTEGER DEFAULT 0,
  USER_ID        VARCHAR(255)  NOT NULL,
  STATUS        VARCHAR(255)  NOT NULL,
  CREATED_TIMESTAMP DATETIME      NOT NULL DEFAULT getdate(),
  PRIMARY KEY (ID,USER_ID),
  CONSTRAINT FK_ID_OB_MULTI_AUTHORIZATION_USER FOREIGN KEY (ID) REFERENCES OB_MULTI_AUTHORIZATION (ID)
    ON DELETE CASCADE
);

CREATE TABLE UK_CONSENT_REV (
  ID        INTEGER IDENTITY(1,1) NOT NULL,
  USER_ID           VARCHAR(255) NOT NULL,
  CONSENT_ID        VARCHAR(255) NOT NULL,
  ACCOUNT_ID        VARCHAR(255) NOT NULL,
  TIMESTAMP         DATETIME     NOT NULL DEFAULT getdate(),
  COLLECTION_METHOD VARCHAR(64),
  PRIMARY KEY (ID)
);

CREATE TABLE  OB_CONSENT_METADATA (
  CONSENT_ID VARCHAR(255) NOT NULL,
  CONSENT_TYPE VARCHAR(255) NOT NULL,
  METADATA_KEY VARCHAR(255) NOT NULL,
  METADATA_VALUE VARCHAR(255) NOT NULL,
  PRIMARY KEY(CONSENT_ID, CONSENT_TYPE, METADATA_KEY),
  CONSTRAINT FK_CONSENT_ID_UK_INITIATION FOREIGN KEY (CONSENT_ID) REFERENCES UK_TRANSACTION_INITIATION (ID)
  ON DELETE CASCADE
);

